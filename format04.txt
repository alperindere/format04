using System;
using System.Security.Cryptography;
using System.Text;

public class PinBlockGenerator
{
    public static string CreatePinBlock(string pin, string cardNumber)
    {
        // Step 1: PIN alanını hazırlayın (örneğin, PIN 1234 ise)
        string pinBlock = "04" + pin.Length.ToString("D2") + pin.PadRight(14, 'F');

        // Step 2: Kart numarasının son 12 hanesini alıyoruz
        string accountNumberBlock = "0000" + cardNumber.Substring(cardNumber.Length - 12);

        // Step 3: PIN bloğu ve hesap numarası bloğunu XOR işlemi ile birleştiriyoruz
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < pinBlock.Length; i++)
        {
            // Hex değerleri olarak XOR işlemi yapıyoruz
            int pinBlockValue = Convert.ToInt32(pinBlock[i].ToString(), 16);
            int accountNumberBlockValue = Convert.ToInt32(accountNumberBlock[i].ToString(), 16);
            int xorValue = pinBlockValue ^ accountNumberBlockValue;

            result.Append(xorValue.ToString("X"));
        }

        return result.ToString();
    }

    public static byte[] EncryptPinBlock(string pinBlock, byte[] key)
    {
        using (TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider())
        {
            tdes.Key = key;
            tdes.Mode = CipherMode.ECB;
            tdes.Padding = PaddingMode.None;

            ICryptoTransform encryptor = tdes.CreateEncryptor();
            byte[] pinBlockBytes = HexStringToByteArray(pinBlock);

            return encryptor.TransformFinalBlock(pinBlockBytes, 0, pinBlockBytes.Length);
        }
    }

    public static byte[] HexStringToByteArray(string hex)
    {
        int numberChars = hex.Length;
        byte[] bytes = new byte[numberChars / 2];
        for (int i = 0; i < numberChars; i += 2)
        {
            bytes[i / 2] = Convert.ToByte(hex.Substring(i, 2), 16);
        }
        return bytes;
    }

    public static string ByteArrayToHexString(byte[] bytes)
    {
        StringBuilder hex = new StringBuilder(bytes.Length * 2);
        foreach (byte b in bytes)
            hex.AppendFormat("{0:X2}", b);
        return hex.ToString();
    }

    public static void Main()
    {
        string pin = "1234";
        string cardNumber = "1234567890123456"; // 16 haneli kart numarası örneği

        // Clear Triple DES anahtarını tanımlayın (16 ya da 24 byte olabilir)
        byte[] clearTdesKey = HexStringToByteArray("0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF"); // 24 byte TDES anahtarı

        // PIN bloğunu oluşturun
        string pinBlock = CreatePinBlock(pin, cardNumber);
        Console.WriteLine("PIN Block (Unencrypted): " + pinBlock);

        // PIN bloğunu TDES anahtarıyla şifreleyin
        byte[] encryptedPinBlock = EncryptPinBlock(pinBlock, clearTdesKey);
        string encryptedPinBlockHex = ByteArrayToHexString(encryptedPinBlock);

        Console.WriteLine("PIN Block (Encrypted): " + encryptedPinBlockHex);
    }
}
