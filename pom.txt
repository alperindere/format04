using System;
using System.Security.Cryptography;
using System.Text;

class AesKcvCalculator
{
    public static string CalculateKcv(string hexKey)
    {
        try
        {
            // Anahtarı byte dizisine çevir
            byte[] keyBytes = HexStringToByteArray(hexKey);

            // Şifreleme nesnesi oluştur
            using (Aes aes = Aes.Create())
            {
                aes.Key = keyBytes;
                aes.Mode = CipherMode.ECB; // ECB modunu kullan
                aes.Padding = PaddingMode.None;

                // Boş (zeroed) bir veri bloğunu şifrele
                byte[] zeroBlock = new byte[16]; // AES blok boyutu: 16 byte
                ICryptoTransform encryptor = aes.CreateEncryptor();
                byte[] encryptedBlock = encryptor.TransformFinalBlock(zeroBlock, 0, zeroBlock.Length);

                // İlk 6 haneyi hex olarak al ve döndür
                return BitConverter.ToString(encryptedBlock).Replace("-", "").Substring(0, 6);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Hata: {ex.Message}");
            return null;
        }
    }

    // Hexadecimal string'i byte array'e çeviren yardımcı metod
    private static byte[] HexStringToByteArray(string hex)
    {
        int length = hex.Length;
        byte[] bytes = new byte[length / 2];

        for (int i = 0; i < length; i += 2)
        {
            bytes[i / 2] = Convert.ToByte(hex.Substring(i, 2), 16);
        }

        return bytes;
    }

    static void Main(string[] args)
    {
        Console.Write("AES Key (Hex): ");
        string hexKey = Console.ReadLine();

        string kcv = CalculateKcv(hexKey);
        if (kcv != null)
        {
            Console.WriteLine($"KCV: {kcv}");
        }
    }
}


<dependency>
    <groupId>redis.clients</groupId>
    <artifactId>jedis</artifactId>
    <version>4.3.1</version>
</dependency>


    <!-- Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>






<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>tcp-to-redis-grpc</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>tcp-to-redis-grpc</name>
    <description>TCP to Redis gRPC Java application</description>

    <properties>
        <java.version>17</java.version>
        <spring.boot.version>2.7.4</spring.boot.version>
    </properties>

    <dependencies>
        <!-- Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!-- gRPC Dependencies -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty</artifactId>
            <version>1.48.0</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>1.48.0</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>1.48.0</version>
        </dependency>

        <!-- Redis (Jedis) Dependency -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>4.3.1</version>
        </dependency>

        <!-- Protobuf Dependency -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.21.7</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
            </plugin>
        </plugins>
    </build>
</project>
