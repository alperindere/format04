import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class TcpToRabbitMq {
    private static final String QUEUE_NAME = "tcp_messages_queue";
    private static final int PORT = 12345;  // TCP/IP port

    public static void main(String[] args) {
        // RabbitMQ Bağlantısı İçin Fabrika Ayarı
        ConnectionFactory factory = new ConnectionFactory();
        factory.setHost("localhost");  // RabbitMQ sunucu adresi

        try (ServerSocket serverSocket = new ServerSocket(PORT);
             Connection connection = factory.newConnection();
             Channel channel = connection.createChannel()) {

            channel.queueDeclare(QUEUE_NAME, false, false, false, null);
            System.out.println("TCP/IP port " + PORT + " dinleniyor...");

            while (true) {
                Socket clientSocket = serverSocket.accept();
                System.out.println("Yeni bir bağlantı kabul edildi: " + clientSocket.getInetAddress());

                // Mesajı Oku
                BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                String incomingMessage;
                while ((incomingMessage = in.readLine()) != null) {
                    System.out.println("Gelen Mesaj: " + incomingMessage);

                    // RabbitMQ'ya Mesajı Gönder
                    channel.basicPublish("", QUEUE_NAME, null, incomingMessage.getBytes("UTF-8"));
                    System.out.println("Mesaj RabbitMQ kuyruğuna bırakıldı: " + incomingMessage);
                }

                // Bağlantıyı kapat
                clientSocket.close();
                System.out.println("Bağlantı sonlandırıldı.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
